#! /bin/bash


##############
# Bash stuff
##############

function toggle_vi_mode () {
  if [ -n "$VI_MODE" ]; then
    unset VI_MODE
    set -o emacs
  else
    VI_MODE=1
    set -o vi
  fi
}

##############
# Git stuff
##############
function git_pull() {
  git pull origin $(git_current_branch)
}

alias gpull=git_pull

function git_current_branch () {
  echo "$(git rev-parse --abbrev-ref HEAD)"
}

function git_push () {
  git push origin $(git_current_branch)
}

alias gpush=git_push

function git_force_push () {
  if [ $(git_current_branch) = "main" ] || [ $(git_current_branch) = "master" ]; then
    echo "You can't force push to main or master"
    return 1
  fi

  git push -f origin $(git_current_branch)
}

alias gfpush=git_force_push

###############
# Rails/Ruby stuff
###############
function kill_rspec() {
  kill -9 $(ps aux | grep rspec | grep -v grep | awk '{print $2}')
}

function bundle_migrate() {
  if [ -f "yarn.lock" ]; then
    yarn install
  fi

  bundle install
  rake db:migrate:with_data
  RAILS_ENV=test rake db:migrate
}

###############
# Random stuff
###############

function listening_on_port() {
  processes=$(lsof -i :$1 | grep LISTEN)
  if [ -z "$processes" ]; then
    echo "Nothing listening on port $1"
  else
    echo "lsof output for LISTEN on port $1  (lsof -i :$1 | grep LISTEN):"
    # echo each item in processes
    while read -r line; do
      echo "$line"
    done <<< "$processes"

    echo
    pid=$(echo "$processes" | head -n 1 | awk '{print $2}')
    echo "ps aux output for the first listining PID (ps aux | grep $pid | grep -v grep):"
    # get the first process id
    ps aux | grep $pid | grep -v grep
  fi
}

###############
# Lint fixers
###############

function prettier_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$')
  if [ -z "$files" ]; then
    echo "No files to prettify"
    return 0
  fi
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run prettier --write
}

function prettier_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$')
  if [ -z "$files" ]; then
    echo "No files to prettify"
    return 0
  fi
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run prettier --write
}

function svelte_check_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$')
  if [ -z "$files" ]; then
    echo "No svelte files to check"
    return 0
  fi
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run svelte-check
}

function svelte_check_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$')
  if [ -z "$files" ]; then
    echo "No svelte files to check"
    return 0
  fi
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run svelte-check
}

function yarn_test_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | grep "spec.js")
  if [ -z "$files" ]; then
    echo "No JS test files to run"
    return 0
  fi
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | grep "spec.js" | xargs yarn run yarn test
}

function yarn_test_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | grep "spec.js")
  if [ -z "$files" ]; then
    echo "No JS test files to run"
    return 0
  fi

  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | grep "spec.js" | xargs yarn run yarn test
}

function standardrb_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to lint"
    return 0
  fi
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$' | xargs bundle exec standardrb --fix
}

function standardrb_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to lint"
    return 0
  fi
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(rb)$' | xargs bundle exec standardrb --fix
}

function rubocop_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to lint"
    return 0
  fi
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$' | xargs bundle exec rubocop -A
}

function rubocop_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to lint"
    return 0
  fi
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(rb)$' | xargs bundle exec rubocop -A
}


function rspec_staged() {
  files=$(git diff --cached --name-only --diff-filter=ACM spec | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to lint"
    return 0
  fi
  rspec $(git diff --cached --name-only --diff-filter=ACM spec | grep -E '\.(rb)$')
}

function rspec_diff() {
  DIFF_TARGET=$1
  files=$(git diff --name-only --diff-filter=ACM $DIFF_TARGET spec | grep -E '\.(rb)$')
  if [ -z "$files" ]; then
    echo "No ruby files to test"
    return 0
  fi
  rspec $(git diff --name-only --diff-filter=ACM $DIFF_TARGET spec | grep -E '\.(rb)$')
}

function all_checks_staged() {
  prettier_staged
  svelte_check_staged
  yarn_test_staged
  rubocop_staged
  rspec_staged
}

function all_checks_diff() {
  DIFF_TARGET=$1
  prettier_diff $DIFF_TARGET
  svelte_check_diff $DIFF_TARGET
  yarn_test_diff $DIFF_TARGET
  rubocop_diff $DIFF_TARGET
  rspec_diff $DIFF_TARGET
}
