#! /bin/bash


##############
# Bash stuff
##############

function toggle_vi_mode () {
  if [ -n "$VI_MODE" ]; then
    unset VI_MODE
    set -o emacs
  else
    VI_MODE=1
    set -o vi
  fi
}

##############
# Git stuff
##############
function git_pull() {
  git pull origin $(git_current_branch)
}

alias gpull=git_pull

function git_current_branch () {
  echo "$(git rev-parse --abbrev-ref HEAD)"
}

function git_push () {
  git push origin $(git_current_branch)
}

alias gpush=git_push

function git_force_push () {
  if [ $(git_current_branch) = "main" ] || [ $(git_current_branch) = "master" ]; then
    echo "You can't force push to main or master"
    return 1
  fi

  git push -f origin $(git_current_branch)
}

alias gfpush=git_force_push

###############
# Rails/Ruby stuff
###############
function rspec_for_branch() {
  bundle exec rspec $(echo $(git_changed_files | grep _spec.rb))
}

function rubocop_for_branch() {
  bundle exec rubocop $(echo $(git_changed_files))
}

function kill_rspec() {
  kill -9 $(ps aux | grep rspec | grep -v grep | awk '{print $2}')
}

function bundle_migrate() {
  bundle install
  rake db:migrate
  RAILS_ENV=test rake db:migrate
}

###############
# Random stuff
###############

function listening_on_port() {
  processes=$(lsof -i :$1 | grep LISTEN)
  if [ -z "$processes" ]; then
    echo "Nothing listening on port $1"
  else
    echo "lsof output for LISTEN on port $1  (lsof -i :$1 | grep LISTEN):"
    # echo each item in processes
    while read -r line; do
      echo "$line"
    done <<< "$processes"

    echo
    pid=$(echo "$processes" | head -n 1 | awk '{print $2}')
    echo "ps aux output for the first listining PID (ps aux | grep $pid | grep -v grep):"
    # get the first process id
    ps aux | grep $pid | grep -v grep
  fi
}

###############
# Lint fixers
###############

function prettier_staged() {
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run prettier --write --plugin-search-dir=.
}

function prettier_diff() {
  DIFF_TARGET=$1
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(svelte|js|jsx|ts|tsx|css|less|scss|json|graphql|md|mdx)$' | xargs yarn run prettier --write --plugin-search-dir=.
}

function standardrb_staged() {
  git diff --cached --name-only --diff-filter=ACM | grep -E '\.(rb)$' | xargs bundle exec standardrb --fix
}

function standardrb_diff() {
  DIFF_TARGET=$1
  git diff --name-only --diff-filter=ACM $DIFF_TARGET | grep -E '\.(rb)$' | xargs bundle exec standardrb --fix
}
