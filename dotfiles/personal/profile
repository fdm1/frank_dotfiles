export LESS=eFRX  # turn off pagination

which_computer() {
  if [ -d /mnt/c/Windows ]; then
    echo "home"
  else
    echo "work"
  fi
}

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

if [ -f ~/._bash_gpg ]; then
  . ~/._bash_gpg
fi


export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.tfenv/bin:$PATH"

if [[ $(which_computer) == "work" ]]; then
  # VIRTUALENVWRAPPER
  export PATH=/usr/local/opt/python/libexec/bin:$PATH

  export PROJECT_HOME=$HOME/coding
  mkdir -p $PROJECT_HOME
  #
  # if [ ! $(command -v virtualenv) ]; then
  # sudo pip install virtualenv
  # sudo pip install virtualenvwrapper
  # fi
  #
  # export WORKON_HOME=$HOME/coding/.virtualenvs
  # export VIRTUALENVWRAPPER_PYTHON=$(which python3)
  # export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
  #
  # source /usr/local/bin/virtualenvwrapper.sh
  #
  # Set up work stuff to use ssh-agent
  ssh_is_up() {
    echo $(ps aux | grep ssh-agent | grep -v grep | wc -l)
  }

  SSH_SOCK_LOC=${HOME}/.ssh/current_ssh_sock

  if [ "$(ssh_is_up)" -eq 0 ]; then
    echo "starting ssh agent"
    eval $(ssh-agent)
    ssh-add -K
    echo ${SSH_AUTH_SOCK} > ${SSH_SOCK_LOC}
  fi

  alias cpair="use_ssh_agent cpair"
  alias bt-ssh="use_ssh_agent ssh"
  start_gpg
  export PAIR=frankmassi
  # export CPAIR_FORWARD_PORTS=8157
fi


# TODO: separate files dealt with in activate.sh
if [[ $(which_computer) == "home" ]]; then
  export SSH_AUTH_SOCK=$(wslpath -a $(gpgconf --list-dirs agent-ssh-socket))
else
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
  disable_yubkikey_keys
fi

# vi:syntax=sh
