#!/usr/bin/env bash

WINDOWS_EMULATOR="/mnt/b/Software/AndroidSdk/emulator/emulator.exe"
WINDOWS_ADB="/mnt/b/Software/AndroidSdk/platform-tools/adb.exe"
WINDOWS_ADB_START_SERVER="$WINDOWS_ADB kill-server && $WINDOWS_ADB -a nodaemon server start"
WINDOWS_ADB_START_SOCAT="socat -d -d TCP-LISTEN:5037,reuseaddr,fork TCP:$(cat /etc/resolv.conf | tail -n1 | cut -d " " -f 2):5037"
WINDOWS_ADB_START_DEVICE="$WINDOWS_EMULATOR @pixel2"

DOCKER_COMPOSE_CMD='cdsrv; yarn install; docker-compose up -d; tmux wait-for -S docker-up; docker-compose logs -f' # bring up postgres and redis, which are dockerized
SERVER_CMD='cdsrv; git pull; bundle install; dbdo && tmux wait-for -S rails-up && rs'
SERVER_NO_DBDO_CMD='cdsrv; git pull; bundle install; tmux wait-for -S rails-up && rs'
JOBS_CMD='cdsrv; rjobs'
KAFKA_CMD='cdsrv; rkafka'

if [[ "$TERM" =~ "screen".* ]]; then
  WINDOW=windows-adb-server

  if [[ -z $(tmux list-windows | grep $WINDOW) ]]; then
    tmux new-window -n $WINDOW
    tmux split-pane -t $WINDOW.0
    tmux split-pane -t $WINDOW.1

    echo "Starting adb services"
    tmux send-keys -t $WINDOW.0 "$WINDOWS_ADB_START_SERVER" C-m
    tmux send-keys -t $WINDOW.1 "$WINDOWS_ADB_START_SOCAT" C-m
    tmux send-keys -t $WINDOW.2 "$WINDOWS_ADB_START_DEVICE" C-m
  fi
else
  echo "this must be run in tmux"
fi
